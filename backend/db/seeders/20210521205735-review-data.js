'use strict';
const faker = require('faker');

module.exports = {
  up: (queryInterface, Sequelize) => {
    return queryInterface.bulkInsert('Reviews', [
    {	userId:	faker.datatype.number({'min': 1, 'max': 14})	,	spotId:	faker.datatype.number({'min': 1, 'max': 14})	,	body:	faker.lorem.paragraphs()	,	cleanReview:	faker.datatype.number({'min': 1, 'max': 5})	,	locationReview:	faker.datatype.number({'min': 1, 'max': 5})	,	valueReview:	faker.datatype.number({'min': 1, 'max': 5})	},
    {	userId:	faker.datatype.number({'min': 1, 'max': 14})	,	spotId:	faker.datatype.number({'min': 1, 'max': 14})	,	body:	faker.lorem.paragraphs()	,	cleanReview:	faker.datatype.number({'min': 1, 'max': 5})	,	locationReview:	faker.datatype.number({'min': 1, 'max': 5})	,	valueReview:	faker.datatype.number({'min': 1, 'max': 5})	},
    {	userId:	faker.datatype.number({'min': 1, 'max': 14})	,	spotId:	faker.datatype.number({'min': 1, 'max': 14})	,	body:	faker.lorem.paragraphs()	,	cleanReview:	faker.datatype.number({'min': 1, 'max': 5})	,	locationReview:	faker.datatype.number({'min': 1, 'max': 5})	,	valueReview:	faker.datatype.number({'min': 1, 'max': 5})	},
    {	userId:	faker.datatype.number({'min': 1, 'max': 14})	,	spotId:	faker.datatype.number({'min': 1, 'max': 14})	,	body:	faker.lorem.paragraphs()	,	cleanReview:	faker.datatype.number({'min': 1, 'max': 5})	,	locationReview:	faker.datatype.number({'min': 1, 'max': 5})	,	valueReview:	faker.datatype.number({'min': 1, 'max': 5})	},
    {	userId:	faker.datatype.number({'min': 1, 'max': 14})	,	spotId:	faker.datatype.number({'min': 1, 'max': 14})	,	body:	faker.lorem.paragraphs()	,	cleanReview:	faker.datatype.number({'min': 1, 'max': 5})	,	locationReview:	faker.datatype.number({'min': 1, 'max': 5})	,	valueReview:	faker.datatype.number({'min': 1, 'max': 5})	},
    {	userId:	faker.datatype.number({'min': 1, 'max': 14})	,	spotId:	faker.datatype.number({'min': 1, 'max': 14})	,	body:	faker.lorem.paragraphs()	,	cleanReview:	faker.datatype.number({'min': 1, 'max': 5})	,	locationReview:	faker.datatype.number({'min': 1, 'max': 5})	,	valueReview:	faker.datatype.number({'min': 1, 'max': 5})	},
    {	userId:	faker.datatype.number({'min': 1, 'max': 14})	,	spotId:	faker.datatype.number({'min': 1, 'max': 14})	,	body:	faker.lorem.paragraphs()	,	cleanReview:	faker.datatype.number({'min': 1, 'max': 5})	,	locationReview:	faker.datatype.number({'min': 1, 'max': 5})	,	valueReview:	faker.datatype.number({'min': 1, 'max': 5})	},
    {	userId:	faker.datatype.number({'min': 1, 'max': 14})	,	spotId:	faker.datatype.number({'min': 1, 'max': 14})	,	body:	faker.lorem.paragraphs()	,	cleanReview:	faker.datatype.number({'min': 1, 'max': 5})	,	locationReview:	faker.datatype.number({'min': 1, 'max': 5})	,	valueReview:	faker.datatype.number({'min': 1, 'max': 5})	},
    {	userId:	faker.datatype.number({'min': 1, 'max': 14})	,	spotId:	faker.datatype.number({'min': 1, 'max': 14})	,	body:	faker.lorem.paragraphs()	,	cleanReview:	faker.datatype.number({'min': 1, 'max': 5})	,	locationReview:	faker.datatype.number({'min': 1, 'max': 5})	,	valueReview:	faker.datatype.number({'min': 1, 'max': 5})	},
    {	userId:	faker.datatype.number({'min': 1, 'max': 14})	,	spotId:	faker.datatype.number({'min': 1, 'max': 14})	,	body:	faker.lorem.paragraphs()	,	cleanReview:	faker.datatype.number({'min': 1, 'max': 5})	,	locationReview:	faker.datatype.number({'min': 1, 'max': 5})	,	valueReview:	faker.datatype.number({'min': 1, 'max': 5})	},
    {	userId:	faker.datatype.number({'min': 1, 'max': 14})	,	spotId:	faker.datatype.number({'min': 1, 'max': 14})	,	body:	faker.lorem.paragraphs()	,	cleanReview:	faker.datatype.number({'min': 1, 'max': 5})	,	locationReview:	faker.datatype.number({'min': 1, 'max': 5})	,	valueReview:	faker.datatype.number({'min': 1, 'max': 5})	},
    {	userId:	faker.datatype.number({'min': 1, 'max': 14})	,	spotId:	faker.datatype.number({'min': 1, 'max': 14})	,	body:	faker.lorem.paragraphs()	,	cleanReview:	faker.datatype.number({'min': 1, 'max': 5})	,	locationReview:	faker.datatype.number({'min': 1, 'max': 5})	,	valueReview:	faker.datatype.number({'min': 1, 'max': 5})	},
    {	userId:	faker.datatype.number({'min': 1, 'max': 14})	,	spotId:	faker.datatype.number({'min': 1, 'max': 14})	,	body:	faker.lorem.paragraphs()	,	cleanReview:	faker.datatype.number({'min': 1, 'max': 5})	,	locationReview:	faker.datatype.number({'min': 1, 'max': 5})	,	valueReview:	faker.datatype.number({'min': 1, 'max': 5})	},
    {	userId:	faker.datatype.number({'min': 1, 'max': 14})	,	spotId:	faker.datatype.number({'min': 1, 'max': 14})	,	body:	faker.lorem.paragraphs()	,	cleanReview:	faker.datatype.number({'min': 1, 'max': 5})	,	locationReview:	faker.datatype.number({'min': 1, 'max': 5})	,	valueReview:	faker.datatype.number({'min': 1, 'max': 5})	},
    {	userId:	faker.datatype.number({'min': 1, 'max': 14})	,	spotId:	faker.datatype.number({'min': 1, 'max': 14})	,	body:	faker.lorem.paragraphs()	,	cleanReview:	faker.datatype.number({'min': 1, 'max': 5})	,	locationReview:	faker.datatype.number({'min': 1, 'max': 5})	,	valueReview:	faker.datatype.number({'min': 1, 'max': 5})	},
    {	userId:	faker.datatype.number({'min': 1, 'max': 14})	,	spotId:	faker.datatype.number({'min': 1, 'max': 14})	,	body:	faker.lorem.paragraphs()	,	cleanReview:	faker.datatype.number({'min': 1, 'max': 5})	,	locationReview:	faker.datatype.number({'min': 1, 'max': 5})	,	valueReview:	faker.datatype.number({'min': 1, 'max': 5})	},
    {	userId:	faker.datatype.number({'min': 1, 'max': 14})	,	spotId:	faker.datatype.number({'min': 1, 'max': 14})	,	body:	faker.lorem.paragraphs()	,	cleanReview:	faker.datatype.number({'min': 1, 'max': 5})	,	locationReview:	faker.datatype.number({'min': 1, 'max': 5})	,	valueReview:	faker.datatype.number({'min': 1, 'max': 5})	},
    {	userId:	faker.datatype.number({'min': 1, 'max': 14})	,	spotId:	faker.datatype.number({'min': 1, 'max': 14})	,	body:	faker.lorem.paragraphs()	,	cleanReview:	faker.datatype.number({'min': 1, 'max': 5})	,	locationReview:	faker.datatype.number({'min': 1, 'max': 5})	,	valueReview:	faker.datatype.number({'min': 1, 'max': 5})	},
    {	userId:	faker.datatype.number({'min': 1, 'max': 14})	,	spotId:	faker.datatype.number({'min': 1, 'max': 14})	,	body:	faker.lorem.paragraphs()	,	cleanReview:	faker.datatype.number({'min': 1, 'max': 5})	,	locationReview:	faker.datatype.number({'min': 1, 'max': 5})	,	valueReview:	faker.datatype.number({'min': 1, 'max': 5})	},
    {	userId:	faker.datatype.number({'min': 1, 'max': 14})	,	spotId:	faker.datatype.number({'min': 1, 'max': 14})	,	body:	faker.lorem.paragraphs()	,	cleanReview:	faker.datatype.number({'min': 1, 'max': 5})	,	locationReview:	faker.datatype.number({'min': 1, 'max': 5})	,	valueReview:	faker.datatype.number({'min': 1, 'max': 5})	},
    {	userId:	faker.datatype.number({'min': 1, 'max': 14})	,	spotId:	faker.datatype.number({'min': 1, 'max': 14})	,	body:	faker.lorem.paragraphs()	,	cleanReview:	faker.datatype.number({'min': 1, 'max': 5})	,	locationReview:	faker.datatype.number({'min': 1, 'max': 5})	,	valueReview:	faker.datatype.number({'min': 1, 'max': 5})	},
    {	userId:	faker.datatype.number({'min': 1, 'max': 14})	,	spotId:	faker.datatype.number({'min': 1, 'max': 14})	,	body:	faker.lorem.paragraphs()	,	cleanReview:	faker.datatype.number({'min': 1, 'max': 5})	,	locationReview:	faker.datatype.number({'min': 1, 'max': 5})	,	valueReview:	faker.datatype.number({'min': 1, 'max': 5})	},
    {	userId:	faker.datatype.number({'min': 1, 'max': 14})	,	spotId:	faker.datatype.number({'min': 1, 'max': 14})	,	body:	faker.lorem.paragraphs()	,	cleanReview:	faker.datatype.number({'min': 1, 'max': 5})	,	locationReview:	faker.datatype.number({'min': 1, 'max': 5})	,	valueReview:	faker.datatype.number({'min': 1, 'max': 5})	},
    {	userId:	faker.datatype.number({'min': 1, 'max': 14})	,	spotId:	faker.datatype.number({'min': 1, 'max': 14})	,	body:	faker.lorem.paragraphs()	,	cleanReview:	faker.datatype.number({'min': 1, 'max': 5})	,	locationReview:	faker.datatype.number({'min': 1, 'max': 5})	,	valueReview:	faker.datatype.number({'min': 1, 'max': 5})	},
    {	userId:	faker.datatype.number({'min': 1, 'max': 14})	,	spotId:	faker.datatype.number({'min': 1, 'max': 14})	,	body:	faker.lorem.paragraphs()	,	cleanReview:	faker.datatype.number({'min': 1, 'max': 5})	,	locationReview:	faker.datatype.number({'min': 1, 'max': 5})	,	valueReview:	faker.datatype.number({'min': 1, 'max': 5})	},



    ], {});
  },

  down: (queryInterface, Sequelize) => {
   return queryInterface.bulkDelete('Reviews', null, {});
  }
};
